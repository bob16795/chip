#!/bin/bash

NAME="suba"
VERSION="0.001"
AUTHOR="budRich"
CONTACT='robstenklippa@gmail.com'
CREATED="2017-12-15"
UPDATED="2017-12-15"

REP_FOLDER="$HOME/cld/Grive/rep"
WWW_FOLDER="$HOME/cld/Grive/www"

FORTUNE_OPTIONS=""
TOILET_OPTIONS='-f 3d.flf'
LOLCAT_OPTIONS='-p 10'

PARA="$1"

main(){
  while getopts :vh option
  do
    case "${option}" in
      v) printf '%s\n' \
           "$NAME - version: $VERSION" \
           "updated: $UPDATED by $AUTHOR"
         exit ;;
      h|*) printinfo && exit ;;
    esac
  done

  if [[ ! -f "$PARA" ]]; then
    st="$(subtit)"
  else
    st="$PARA"
  fi
  st=$(readlink -f "$st")

  echo "$st"

  [[ $st =~ $WWW_FOLDER ]] \
    && st=${st/$WWW_FOLDER\/content/$REP_FOLDER} \
    && st=${st%.md} && st="${st}/${st##*/}"

  [[ $st =~ $REP_FOLDER ]] \
    && updatesuba \
    || newsuba
}

updatesuba(){

  # gen www.md, readme.md, man
  local wwwyaml
  local wwwhead
  local wwwfil="${st/$REP_FOLDER/$WWW_FOLDER\/content}"
  local wwwfil="${wwwfil%/*}.md"
  local repfil="${st}"
  local namn="${repfil##*/}"
  local trgrep="${repfil%/*}"

  # echo "$wwwfil" && exit
  wwwyaml=$(awk '
    $0=="* * *"{fnd++}
    fnd<2{print $0}
    $0=="---"{fnd++}
    ' "$wwwfil")

  wwwhead=$(awk '
    $0=="* * *"{fnd++}
    fnd==2{print $0}
    $0=="---"{fnd++}
    ' "$wwwfil")


  echo -e "${wwwhead}" | awk '{
    gsub("[(]/","(https://budrich.github.io/",$0)
    if($1=="{{<" && $2=="jewtube"){
      $0="https://www.youtube.com/watch?v=" $3 "  "}
    if($1=="{{<" && $2=="imagus"){
      gsub("[\"]","",$3)
      $0="[![](https://budrich.github.io/img/awd/"$3")]" \
      "(https://budrich.github.io/img/org/"$3")"
    }
    print $0
  }' > "$trgrep/README.md"

  echo -e "${wwwyaml}" > "$wwwfil"
  echo -e "${wwwhead}" >> "$wwwfil"
  echo -e "* * *" >> "$wwwfil"
  if [[ -x "$repfil" ]] && [[ $(head -1 "$repfil") =~ ^'#!/bin/'(bash)|(sh) ]]; then
    ${repfil} md >> "$trgrep/README.md"
    echo -n "# " >> "$wwwfil"
    ${repfil} md | tail --lines=+2 >> "$wwwfil"
    ${repfil} man | go-md2man > "$trgrep/${namn}.1"
  fi
}

newsuba(){
  local catg trgsym

  local namn="${st##*/}"
  catg=$(rofi -dmenu -filter "FOLDER/$namn" -p 'folder/name: ')
  namn=${catg##*/}
  catg=${catg%/*}

  [[ $catg = "FOLDER" ]] && exit
  [[ -z $catg ]] && exit
  [[ -z $namn ]] && exit

  local trgrep="$REP_FOLDER/$catg/${namn}"
  local wwwfiles="$WWW_FOLDER/static/$catg/${namn}/files"
  local wwwmd="$WWW_FOLDER/content/$catg/${namn}.md"

  mkdir -p "$trgrep"
  mv "$st" "$trgrep/${namn}"
  [[ ! ${catg%%/*} =~ scripts|i3ass|i3add ]] \
    && ln -s "$trgrep/${namn}" "$st"

  echo "# ${namn}" > "$trgrep/README.md"
  if [[ -x "$trgrep/${namn}" ]] && [[ $(head -1 "$trgrep/${namn}") =~ ^'#!/bin/bash' ]]; then
    "$trgrep/${namn}" md >> "$trgrep/README.md"
    "$trgrep/${namn}" man | go-md2man > "$trgrep/${namn}.1"
  fi

  newpost "${namn}" "$catg"
  echo "* * *" >> "$wwwmd"
  cat "$trgrep/README.md" >> "$wwwmd"


  mkdir -p "${wwwfiles}"
  ln "$trgrep/${namn}" "$wwwfiles/${namn}"
  ln "$REP_FOLDER/${catg%/*}/LICENSE" "$wwwfiles/LICENSE"

  postbanner -t "${TOILET_OPTIONS}" -l "${LOLCAT_OPTIONS}" -o "${wwwfiles%/*}/banner.html" "${namn}"
  postquote -f "${FORTUNE_OPTIONS}" "${wwwfiles%/*}/quote.html"

  case "$catg" in
    dots*    ) trgsym="${catg/dots/dot}" ;;
    i3ass*   ) trgsym="src/$catg" ;;
    i3add*   ) trgsym="src/$catg" ;;
    scripts* ) trgsym="src/${catg/scripts/}" ;;
    * )        trgsym="$catg" ;;
  esac

  mkdir -p "$HOME/${trgsym%%/*}/md"
  mkdir -p "$HOME/${trgsym}"
  ln -s "$trgrep/${namn}" "$HOME/$trgsym"
  ln -s "$wwwmd" "$HOME/${trgsym%%/*}/md"
  echo "$wwwmd"
  if [[ -z "$PARA" ]]; then
    subl --command "close"
    sleep .5
    subl "$HOME/$trgsym/${namn}"
    subl "$HOME/${trgsym%%/*}/md/${namn}.md"
  fi
}

newpost(){
  cd "$WWW_FOLDER" || exit
  local namn="$1"
  local cato="$2"
  # create _index.md in all subfolders to define
  # sections properly.
  trg_url="${trgmd/${REM_ROOT}\/content/}"
  trgtmp="/${cato}"
  while [[ -n ${trgtmp} ]]; do
    hugo new "${trgtmp}/_index.md"
    sed -i "/title/c\title: \"${trgtmp##*'/'}\"" "content/${trgtmp}/_index.md"
    sed -i "/draft/c\draft: true" "content/${trgtmp}/_index.md"
    trgtmp=${trgtmp%'/'*}
  done

  hugo new "$cato/$namn.md"
  sed -i "/fspath/c\fspath: \"${st}\"" "content/$cato/$namn.md"
}

printinfo(){
  if [[ ! $1 =~ m|f ]];then
    echo -e "${about}" | awk '
       BEGIN{ind=0}
       $0~/^```/{
         if(ind!="1"){ind="1"}
         else{ind="0"}
         print ""
       }
       $0!~/^```/{
         gsub("[`*]","",$0)
         if(ind=="1"){$0="   " $0}
         print $0
       }
     '
  else
    [[ $1 = f ]] && echo -e "${bouthead}"
    echo -e "${about}"
    [[ $1 = f ]] && echo -e "${boutfoot}"
  fi
}

bouthead="
${NAME^^} 1 ${CREATED} Linux \"User Manuals\"
=======================================

NAME
----"

boutfoot="
AUTHOR
------

${AUTHOR} <${CONTACT}>
<https://budrich.github.io>
"

about='
`suba` - Do things with the active file in sublime.

SYNOPSIS
--------

`suba` [`-v`|`-h`]

DESCRIPTION
-----------

`suba` analyzes the title of Sublime to get the
filename of the currently open *FILE*. It also follows
eventual symlinks to the *FILE* to knwo exactly where
on the filesystem the *FILE* is located. Depending on
the type and location of the *FILE* different actions
is applied.

ACTIONS
-------
*FILE* is in `REP_FOLDER`
  Update readme.md in *REP*, and www. If file isn'"'"'t
  in `REP_FOLDER/dots`: generate man page.
  A rofi menu will be shown, asking if the user wants
  to upload the changed files to github.

*FILE* is in `BIN_FOLDER`
  A rofi meny will ask for a category for the file.
  It will move the file to the right location in
  `REP_FOLDER`. If the file is executable a manpage
  and a readme file will be created. It will then
  generate necessary files in `WWW_FOLDER`:
  (markdown, quote, banner). And create hardlinks
  between *FILE* in `REP_FOLDER` and `WWW_FOLDER`.
  Symlinks will be created in `HOME_FOLDER` from
  `REP_FOLDER`

OPTIONS
-------

`-v`
  Show version and exit.

`-h`
  Show help and exit.

FILES
-----

*REP_FOLDER*
  A folder containing local github repositories.

*WWW_FOLDER*
  Root folder for the source of a `hugo` site.

ENVIRONMENT
-----------

`REP_FOLDER`
  Set this variable to override the default (*~/rep*).

`WWW_FOLDER`
  Set this variable to override the default (*~/www*).

DEPENDENCIES
------------

go-md2man
i3get
Sublime-Text
postbanner
postquote
hugo
'

if [[ $1 = md ]];then
  printinfo m
elif [[ $1 = man ]];then
  printinfo f
else
  main "${@}"
fi
