#!/usr/bin/env python
import os
import subprocess
import shutil
def check(ju):
    j = os.path.expanduser(ju)
    if (j.decode("utf-8").split('.')[-1]) != j.decode("utf-8"):
        return types.get(j.decode("utf-8").split('.')[-1], None)
    else:
        return types[None].get(j.decode("utf-8").split('/')[-1], None)
paths = ["~/dwn",
        "~/doc",
        "~/msc",
        "~/pix/Unsorted/",
        "~/rom/Unsorted"]

types = {
        "pdf":"~/doc/pdf/",
        "odt":"~/doc/odt/",
        "ods":"~/doc/xls/",
        "xlsx":"~/doc/xls/",
        "png":"~/pix/Unsorted/",
        "gif":"~/pix/gif/",
        "jpg":"~/pix/Unsorted/",
        "jpe":"~/pix/Unsorted/",
        "jpeg":"~/pix/Unsorted/",
        "part":"rm ",
        "4tc":"rm ",
        "xref":"rm ",
        "tmp":"rm ",
        "pyc":"rm ",
        "pyo":"rm ",
        "fls":"rm ",
        "vrb":"rm ",
        "fdb_latexmk":"rm ",
        "bak":"rm ",
        "swp":"rm ",
        "aux":"rm ",
        "log":"rm ",
        "synctex(busy)":"rm ",
        "lof":"rm ",
        "out":"rm ",
        "snm":"rm ",
        "toc":"rm ",
        "bcf":"rm ",
        "xml":"rm ",
        "gz" :"~/doc/arc/",
        "blg":"rm ",
        "bbl":"rm ",
        "zip":"~/doc/arc/",
        "exe":"~/exc/",
        "msi":"~/exc/",
        "jar":"~/exc/",
        "sh" :"~/exc/",
        "apk":"~/pho/apk/",
        "7z" :"~/doc/arc/",
        "iso":"rm ",
        "idx":"rm ",
        "ilg":"rm ",
        "ind":"rm ",
        "txt":"~/doc/man/",
        "html":"~/doc/man/",
        "md" :"~/doc/man/",
        "ms" :"~/doc/src/",
        "tex":"~/doc/src/",
#        "bib":"~/doc/cit/",
        "nes":"~/rom/nes/",
        "smc":"~/rom/snes/",
        "sfc":"~/rom/snes/",
        None: {
            "LICENSE":"~/doc/man",
            "1":"rm ",
            }
        }

for i in paths:
    #print(os.path.expanduser(i))
    lol = subprocess.check_output(["tree","-N", "-f","-i", os.path.expanduser(i)])
    nope = lol.split(b'\n')[1:-4]
    for j in nope:
        #print(j.decode("utf-8"))
        if os.path.isfile(j.decode("utf-8")):
            if not ".git" in j.decode("utf-8"):
                checked = check(j)
                if not checked is None:
		    checked = os.path.expanduser(checked)
                #checked = "~/msc/"
                    if not checked == "rm ":
                      if not os.path.expanduser(j.decode("utf-8")) == checked+j.decode("utf-8").split('/')[-1]:
                        print("mv '{}' '{}'".format(os.path.expanduser(j.decode("utf-8")),checked+j.decode("utf-8").split('/')[-1]))
                    else:
                        print(checked+"'"+j.decode("utf-8") +"'")
pix = subprocess.check_output(["tree","-N", "-f","-i", "~/pix/Unsorted"]).split(b'\n')[1:-4]
#for i in pix:
#    subprocess.call(["feh", i.decode("utf-8")])
#    lol = subprocess.check_output(["~/bin/rofipix"]).decode("utf-8").split("::")
#    print("mv {} ~/pix/{}/{}$(ls /home/john/pix/{}/{}*.jpg | wc -l).jpg".format(i.decode("utf-8"), lol[0],lol[1] ,lol[0], lol[1]))
    #print("feh {} && mv {} ~/pix/$( cd /home/john/pix && ls -d */ | cut -f1 -d'/'| rofi -dmenu)/$(rofi -dmenu)$(ls *.jpg | wc -l).png".format(i.decode("utf-8"),i.decode("utf-8")))
